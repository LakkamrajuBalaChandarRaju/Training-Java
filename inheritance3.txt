Bala.Lakkamraju(2LM)

Main.java
___________________________________________________

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

	public static void main(String[] args) {

		int choice = -1, totalCost = 0;
		String[] input = null;
		SilverStall silverStall = null;
		GoldStall goldStall = null;
		PlatinumStall platinumStall = null;

		try (BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))) {
			System.out.println("Choose Stall Type");
			System.out.println("1.Silver Stall");
			System.out.println("2.Gold Stall");
			System.out.println("3.Platinum Stall");

			choice = Integer.parseInt(bufferedReader.readLine());

			if (choice == 1) {
				silverStall = new SilverStall();

				System.out.println(
						"Enter Stall details in comma separated(Stall Name,Stall Description,Owner Name,Stall Cost)");

				input = bufferedReader.readLine()
						.split(",");

				if (input.length != 4) {
					throw new Exception("Error: Not all required details are entered");
				}

				silverStall.setName(input[0]);
				silverStall.setDetail(input[1]);
				silverStall.setOwner(input[2]);
				silverStall.setCost(Integer.parseInt(input[3]));

				totalCost = silverStall.getCost();
				System.out.println(silverStall);

			} else if (choice == 2) {
				goldStall = new GoldStall();

				System.out.println(
						"Enter Stall details in comma separated(Stall Name,Stall Description,Owner Name,Stall Cost,Number of TV set)");

				input = bufferedReader.readLine()
						.split(",");

				if (input.length != 5) {
					throw new Exception("Error: Not all required details are entered");
				}

				goldStall.setName(input[0]);
				goldStall.setDetail(input[1]);
				goldStall.setOwner(input[2]);
				goldStall.setCost(Integer.parseInt(input[3]));
				goldStall.setTvSet(Integer.parseInt(input[4]));

				totalCost = goldStall.getCost() + (goldStall.getTvSet() * 100);

				System.out.println(goldStall);
			} else if (choice == 3) {
				platinumStall = new PlatinumStall();

				System.out.println(
						"Enter Stall details in comma separated(Stall Name,Stall Description,Owner Name,Stall Cost,Number of TV set,Number of Projectors)");

				input = bufferedReader.readLine()
						.split(",");

				if (input.length != 6) {
					throw new Exception("Error: Not all required details are entered");
				}

				platinumStall.setName(input[0]);
				platinumStall.setDetail(input[1]);
				platinumStall.setOwner(input[2]);
				platinumStall.setCost(Integer.parseInt(input[3]));
				platinumStall.setTvSet(Integer.parseInt(input[4]));
				platinumStall.setProjector(Integer.parseInt(input[5]));

				totalCost = platinumStall.getCost() + (platinumStall.getTvSet() * 100)
						+ (platinumStall.getProjector() * 500);

				System.out.println(platinumStall);
			} else {
				System.exit(0);
			}

			System.out.println("Total Cost:" + totalCost);
		} catch (NumberFormatException numberFormatException) {
			System.err.println("Error: Invalid number format entered");
		} catch (Exception exception) {
			System.err.println(exception.getMessage());
		}
	}
}



SilverStall.java
________________________________________________

public class SilverStall {
	protected String name;
	protected String detail;
	protected String owner;
	protected Integer cost;

	public SilverStall() {
	}

	public SilverStall(String name, String detail, String owner, Integer cost) {
		this.name = name;
		this.detail = detail;
		this.owner = owner;
		this.cost = cost;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDetail() {
		return detail;
	}

	public void setDetail(String detail) {
		this.detail = detail;
	}

	public String getOwner() {
		return owner;
	}

	public void setOwner(String owner) {
		this.owner = owner;
	}

	public Integer getCost() {
		return cost;
	}

	public void setCost(Integer cost) {
		this.cost = cost;
	}

	@Override
	public String toString() {
		return new StringBuilder().append("Stall Name:")
				.append(name)
				.append("\nDetails:")
				.append(detail)
				.append("\nOwner Name:")
				.append(owner)
				.toString();
	}

}


 PlatinumStall.java
____________________________________________

public class PlatinumStall extends GoldStall {
	private Integer projector;

	public PlatinumStall() {
	}

	public PlatinumStall(String name, String detail, String owner, Integer cost, Integer tvSet, Integer projector) {
		super(name, detail, owner, cost, tvSet);
		this.projector = projector;
	}

	public Integer getProjector() {
		return projector;
	}

	public void setProjector(Integer projector) {
		this.projector = projector;
	}

	@Override
	public String toString() {
		return new StringBuilder(super.toString()).append("\nProjectors:")
				.append(projector)
				.toString();
	}

}

GoldStall.java
________________________________________--

public class GoldStall extends SilverStall {
	private Integer tvSet;

	public GoldStall() {
	}

	public GoldStall(String name, String detail, String owner, Integer cost, Integer tvSet) {
		super(name, detail, owner, cost);
		this.tvSet = tvSet;
	}

	public Integer getTvSet() {
		return tvSet;
	}

	public void setTvSet(Integer tvSet) {
		this.tvSet = tvSet;
	}

	@Override
	public String toString() {
		return new StringBuilder(super.toString()).append("\nTV Sets:")
				.append(tvSet)
				.toString();
	}

}


Output

Choose Stall Type
1.Silver Stall
2.Gold Stall
3.Platinum Stall
1
Enter Stall details in comma separated(Stall Name,Stall Description,Owner Name,Stall Cost)
Fruits,Fruits are good for health,Kishore,2000
Stall Name:Fruits
Details:Fruits are good for health
Owner Name:Kishore
Total Cost:2000



Choose Stall Type
1.Silver Stall
2.Gold Stall
3.Platinum Stall
2
Enter Stall details in comma separated(Stall Name,Stall Description,Owner Name,Stall Cost,Number of TV set)
Junk Foods,Tastier world,JM,5000,7
Stall Name:Junk Foods
Details:Tastier world
Owner Name:JM
TV Sets:7
Total Cost:5700



Choose Stall Type
1.Silver Stall
2.Gold Stall
3.Platinum Stall
3
Enter Stall details in comma separated(Stall Name,Stall Description,Owner Name,Stall Cost,Number of TV set,Number of Projectors)
Vehicular,Engines are the best,Raizak,6000,5,3
Stall Name:Vehicular
Details:Engines are the best
Owner Name:Raizak
TV Sets:5
Projectors:3
Total Cost:8000


