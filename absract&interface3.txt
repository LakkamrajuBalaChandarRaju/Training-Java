Bala.Lakkamraju(2LM)


Main.java

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

	public static void main(String[] args) {
		Event event = null;
		int choice = -1;
		String[] input = null;

		try (BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))) {
			System.out.println("Enter your choice");
			System.out.println("1.Exhibition");
			System.out.println("2.StageEvent");

			choice = Integer.parseInt(bufferedReader.readLine());

			if (!((choice == 1) || (choice == 2))) {
				throw new Exception("Invalid choice");
			}

			System.out.println("Enter the details in CSV format");
			input = bufferedReader.readLine()
					.split(",");

			if (input.length != 6) {
				throw new Exception("Error: Not all required parameters are entered");
			}

			if (choice == 1) {
				event = new Exhibition(input[0], input[1], input[2], input[3], Integer.parseInt(input[4]),
						Double.parseDouble(input[5]));
				System.out.println("Exhibition Details");
			} else if (choice == 2) {
				event = new StageEvent(input[0], input[1], input[2], input[3], Integer.parseInt(input[4]),
						Double.parseDouble(input[5]));
				System.out.println("Stage Event Details");
			}

			System.out.println(event);
			System.out.println("Total Cost:" + event.calculateAmount());

		} catch (NumberFormatException numberFormatException) {
			System.err.println("Error: Invalid number format entered");
		} catch (IOException ioException) {
			System.err.println("Error: IO error occurred");
		} catch (Exception exception) {
			System.err.println(exception.getMessage());
		}

	}

}





Event.java

public abstract class Event {
	protected String name;
	protected String detail;
	protected String type;
	protected String organiser;

	public Event() {
	}

	public Event(String name, String detail, String type, String organiser) {
		this.name = name;
		this.detail = detail;
		this.type = type;
		this.organiser = organiser;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDetail() {
		return detail;
	}

	public void setDetail(String detail) {
		this.detail = detail;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getOrganiser() {
		return organiser;
	}

	public void setOrganiser(String organiser) {
		this.organiser = organiser;
	}

	@Override
	public String toString() {
		return new StringBuilder().append("Event Name:")
				.append(name)
				.append("\nDetail:")
				.append(detail)
				.append("\nType:")
				.append(type)
				.append("\nOrganiser Name:")
				.append(organiser)
				.toString();
	}

	public abstract Double calculateAmount();
}


public class Exhibition extends Event {
	private Integer noOfStalls;
	private Double rentPerStall;

	public Exhibition() {
	}

	public Exhibition(String name, String detail, String type, String organiser, Integer noOfStalls,
			Double rentPerStall) {
		super(name, detail, type, organiser);
		this.noOfStalls = noOfStalls;
		this.rentPerStall = rentPerStall;
	}

	public Integer getNoOfStalls() {
		return noOfStalls;
	}

	public void setNoOfStalls(Integer noOfStalls) {
		this.noOfStalls = noOfStalls;
	}

	public Double getRentPerStall() {
		return rentPerStall;
	}

	public void setRentPerStall(Double rentPerStall) {
		this.rentPerStall = rentPerStall;
	}

	@Override
	public Double calculateAmount() {
		return noOfStalls * rentPerStall;
	}

}


StageEvent.java

public class StageEvent extends Event {
	private Integer noOfShows;
	private Double costPerShow;

	public StageEvent() {
	}

	public StageEvent(String name, String detail, String type, String organiser, Integer noOfShows,
			Double costPerShow) {
		super(name, detail, type, organiser);
		this.noOfShows = noOfShows;
		this.costPerShow = costPerShow;
	}

	public Integer getNoOfShows() {
		return noOfShows;
	}

	public void setNoOfShows(Integer noOfShows) {
		this.noOfShows = noOfShows;
	}

	public Double getCostPerShow() {
		return costPerShow;
	}

	public void setCostPerShow(Double costPerShow) {
		this.costPerShow = costPerShow;
	}

	@Override
	public Double calculateAmount() {
		return noOfShows * costPerShow;
	}

}


Output

Enter your choice
1.Exhibition
2.StageEvent
1
Enter the details in CSV format
Book expo,Special sale,Academics,Martin,100,1000
Exhibition Details
Event Name:Book expo
Detail:Special sale
Type:Academics
Organiser Name:Martin
Total Cost:100000.0

Output 2:
 
Enter your choice
1.Exhibition
2.StageEvent
2
Enter the details in CSV format
JJ magic show,Comedy magic,Entertainment,Steffania,5,1000
Stage Event Details
Event Name:JJ magic show
Detail:Comedy magic
Type:Entertainment
Organiser Name:Steffania
Total Cost:5000.0
 
 
 Output 3:
 
Enter your choice
1.Exhibition
2.StageEvent
3
Invalid choice
